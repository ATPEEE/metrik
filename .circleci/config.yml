version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.15.2
  aws-cli: circleci/aws-cli@1.3.2

jobs:
  test_build_push_deploy:
    docker:
      - image: circleci/node:14.15.4

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: npm ci

      - run:
          name: Run tests
          command: npm run test

      - run:
          name: Build artifacts
          command: npm run build:prod

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run:
          name: Build and tag Docker image
          command: |
            TAG=v${CIRCLE_BUILD_NUM}-$(date '+%Y%m%d')
            docker build -f ./Dockerfile-CircleCI -t ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO}:$TAG -t ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO}:latest .

      - aws-cli/install

      - aws-ecr/ecr-login

      - aws-ecr/push-image:
          repo: ${AWS_ECR_REPO}
          tag: latest,v${CIRCLE_BUILD_NUM}-$(date '+%Y%m%d')

      - add_ssh_keys:
          fingerprints:
            - "a4:34:c2:35:1d:e6:ec:e5:4a:38:34:b1:4d:14:d7:b6"
      - run:
          name: Add remote host to trusted-hosts
          command: |
            ssh-keyscan -H -p ${SSH_PORT_DEV} ${SSH_HOST_DEV} >> ~/.ssh/known_hosts

      - run:
          name: Login and deploy artifacts to DEV
          command: |
            ssh ${SSH_USER}@${SSH_HOST_DEV} -p${SSH_PORT_DEV} "
              CONTAINER_NAME=4km-dashboard-dev
              CURRENT_CONTAINER_ID=\$(docker ps -aqf name=\$CONTAINER_NAME)

              if [ ! -z \$CURRENT_CONTAINER_ID ]; then
                echo \"Killing existing docker container...\"
                docker container stop \$CURRENT_CONTAINER_ID
                docker container rm \$CURRENT_CONTAINER_ID
              fi

              echo \"Cleaning up...\"
              docker rmi -f ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO}
              docker system prune -f

              echo \"Deploying...\"
              docker run --name \$CONTAINER_NAME -d -p 80:80 --net=4km-docker_default ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO}
            "

workflows:
  version: 2
  test_build_push_and_deploy:
    jobs:
      - test_build_push_deploy